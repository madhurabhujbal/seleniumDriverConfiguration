CryptoJS.enc.URLBase64={stringify:function(r){return CryptoJS.enc.Base64.stringify(r).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")},parse:function(r){return CryptoJS.enc.Base64.parse(r.replace(/-/g,"+").replace(/_/g,"/"))}},CryptoJS.format.Keeper={stringify:function(r){return r.iv.concat(r.ciphertext).toString(CryptoJS.enc.URLBase64)},parse:function(r){var t=CryptoJS.enc.URLBase64.parse(r);return CryptoJS.lib.CipherParams.create({iv:CryptoJS.lib.WordArray.create(t.words.slice(0,4)),ciphertext:CryptoJS.lib.WordArray.create(t.words.slice(4))})}},CryptoJS.format.KeeperFile={blobify:function(r){return new Blob([r.iv.toByteArray(),r.ciphertext.toByteArray()],{type:"application/octet-binary"})},stringify:function(r){return r.iv.concat(r.ciphertext).toString(CryptoJS.enc.URLBase64)},parse:function(r){var t=CryptoJS.lib.WordArray.create(r);return CryptoJS.lib.CipherParams.create({iv:CryptoJS.lib.WordArray.create(t.words.slice(0,4)),ciphertext:CryptoJS.lib.WordArray.create(t.words.slice(4))})}},CryptoJS.lib.WordArray.random=function(r){if("undefined"!=typeof crypto&&crypto.getRandomValues){var t=[],e=new Int32Array(r/4);crypto.getRandomValues(e);for(var o=0;o<e.length;o++)t.push(e[o]);return new CryptoJS.lib.WordArray.init(t,r)}throw new Error("No CSPRNG.")},CryptoJS.lib.WordArray.toBlob=function(r){var t=r||"application/octet-binary";return new Blob([this.toByteArray()],{type:t})},CryptoJS.lib.CipherParams.toBlob=function(r){return(r||this.formatter).blobify(this)};