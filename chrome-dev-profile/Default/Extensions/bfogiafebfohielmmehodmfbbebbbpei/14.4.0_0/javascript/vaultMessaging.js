var VaultMessaging={sendMessageToVault:function(e,s){e.client="ext",bg.vault_port_by_tab[s]?bg.vault_port_by_tab[s].postMessage(e):chrome.tabs.sendMessage(s,e),logger({group:"Extension to Vault",name:e.cmd,data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log})},secureMessageForVault:function(e,s){const a=e,t=bg.vault_comm_keys_by_tab[s],o=KeeperAES256GCM.encryptToBytes(JSON.stringify(Object.assign({},a,{client:"ext"})),t);var n=convert.bytes_to_base64urlsafe(o);if(bg.vault_port_by_tab[s])bg.vault_port_by_tab[s].postMessage(n);else try{chrome.tabs.sendMessage(s,n)}catch(e){logger({data:"sendMessage wrong format: "+n,whichMessages:{vaultMessages:!0},consoleFunction:console.error})}e.credential&&delete e.credential.vault_password,logger({group:"Extension to Vault",name:e.cmd,data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log})},handleVaultMessage:function(e,s,a){if("string"==typeof e&&(isChrome&&(e=JSON.parse(e)),e=convert.base64urlsafe_to_bytes(e)),"[object Uint8Array]"===Object.prototype.toString.call(e)){var t;isFirefox&&(e=Uint8Array.from(e));const o=bg.vault_comm_keys_by_tab[s];try{t=JSON.parse(convert.bytes_to_utf8(KeeperAES256GCM.decryptToBytes(e,o)))}catch(e){return void logger({data:"Cannot Decrypt message.",whichMessages:{vaultMessages:!0},consoleFunction:console.error})}VaultMessaging.handleEncryptedMessage(t,s,a)}else VaultMessaging.handleUnencryptedMessages(e,s,a)},handleUnencryptedMessages:function(e,s,a){switch(logger({group:"Vault to Extension",name:e.cmd,data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log}),e.cmd){case"vaultLoaded":isChrome||VaultMessaging.sendMessageToVault({cmd:"handshake"},s);break;case"handshake":Promise.resolve().then(()=>generateKeyPair(2048)).then(({public_key:e,private_key:a})=>{var t=new RSAKey;t.readPKCS5PrvKeyHex(a),bg.vault_priv_keys_by_tab[s]=t,VaultMessaging.sendMessageToVault({cmd:"public-key",public_key:e},s)}).catch(e=>{logger({data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.error})});break;case"communication-key":if(e&&e.communication_key){const{communication_key:a}=e;try{var t=bg.vault_priv_keys_by_tab[s].decryptBinary(a);const e=t.substring(0,t.length/2);if(e!==t.substring(t.length/2))throw new Error;const o=convert.hex_to_bytes(e);bg.vault_comm_keys_by_tab[s]=o,bg.get("isLoggedIn")||bg.get("temp_password")&&bg.get("temp_login")?VaultMessaging.secureMessageForVault({cmd:"extensionLoginVault"},s):VaultMessaging.secureMessageForVault({cmd:"vaultLoginExtension"},s)}catch(e){logger({data:"Cannot decrypt communication key",whichMessages:{vaultMessages:!0},consoleFunction:console.error})}}break;default:logger({data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log})}},handleEncryptedMessage:function(e,s,a){if("ext"!==e.client)switch("loginExtension"!=e.cmd&&logger({group:"Vault to Extension",name:e.cmd,data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log}),e.cmd){case"ping":const{client:a}=e;"ext"!==a&&VaultMessaging.secureMessageForVault({cmd:"pong",data:"extension pong:"+e},s);break;case"yubikey_u2f_challenge":var t=getYubikeyU2fChallenge();t.u2f_challenge.cmd="authenticateRequests",VaultMessaging.secureMessageForVault(t.u2f_challenge,sender);break;case"loginSuccess":break;case"logout":chrome.tabs.sendMessage(s,{data:"removeInactivityTimeoutListener"}),delete bg.vault_logged_in_by_tab[s],Logout();break;case"ping":VaultMessaging.secureMessageForVault({cmd:"ping"});break;case"masterPasswordChanged":bg.set("pass",e.password);break;case"newDeviceToken":bg.set("deviceToken",e.device_token),localSetting.removeItem("dtokens");break;case"request-credential":var o=sendCredentials();VaultMessaging.secureMessageForVault({cmd:"response-credential",credential:o},s),bg.vault_logged_in_by_tab[s]=!0;break;case"loginExtension":chrome.tabs.sendMessage(s,{name:"setInactivityTimeoutListener"}),bg.vault_logged_in_by_tab[s]=!0,VaultMessaging.loginExtensionFromVault(e,s),delete e.p,logger({group:"Extension to Vault",name:e.cmd,data:e,whichMessages:{vaultMessages:!0},consoleFunction:console.log});break;case"linkClicked":VaultMessaging.handleLinkClicked(e);break;case"alreadyLoggedin":break;case"setTheme":case"setTimeout":case"sso_login":break;default:logger({data:"Unhandled Vault message"+e,whichMessages:{vaultMessages:!0},consoleFunction:console.warn})}},handleLinkClicked:function({record_id:e}){var s=bg.get("vaultRecordClickedTimeout"),a=getRecordById(e);bg.set("autoFillRecord",{record:a,filled:!1,fromVault:!0}),clearTimeout(s)},loginExtensionFromVault:function(e,s){if(setTermsAndPrivacyAccepted(),e.device_token&&e.remember_device_token&&(localSetting.setItem("expire_index",2,e.email),bg.set("remember_device_token",e.remember_device_token),saveDeviceToken(e.device_token,e.email)),e.sso_domain&&localStorage.setItem("ssoServiceProvider",e.sso_domain),!bg.get("isLoggedIn")||bg.get("uname")!==e.email){var a=bg.get("isPendingU2F");bg.set("logintype",e.login_type||LoginType.NORMAL),Login({username:e.email,password:e.p,logintype:e.login_type,rememberEmail:e.remember_email,dtoken:e.device_token,noLoginVault:!0,login_callback:function(t){"success"===t.result&&(makeContextMenu(),t.settings&&t.settings.sso_user&&(bg.set("isSsoUser",t.settings.sso_user),e.ssoServiceProvider?localStorage.ssoServiceProvider=e.ssoServiceProvider:localStorage.removeItem("ssoServiceProvider")),localStorage.savedUsers?savedUsers=JSON.parse(localStorage.savedUsers):savedUsers={},""==e.email||t.settings&&t.settings.sso_user||(savedUsers[e.email]=e.email,localStorage.savedUsers=JSON.stringify(savedUsers)),"remember_email"in e?e.remember_email?localStorage.setItem("rememberedEmail",e.email):localStorage.removeItem("rememberedEmail"):a&&(bg.get("rememberMe")?localStorage.setItem("rememberedEmail",e.email):localStorage.removeItem("rememberedEmail")),syncDown(function(e,a){a.length&&debugmode&&sendMessageToAllVaultTabs("backgroundError",{data:a}),"success"===e.result?(initializeSettings(),chrome.browserAction.setIcon({path:{19:"19-active.png",38:"38-active.png"}}),bg.vault_logged_in_by_tab[s]=!0):Logout()}))}})}},loginFirstVaultTabThatIsNotLoggedIn:function(){VaultMessaging.getVaultTabs(function(e){e.forEach(function(e){e&&e.id&&!bg.vault_logged_in_by_tab[e.id]&&bg.vault_comm_keys_by_tab[e.id]&&(VaultMessaging.secureMessageForVault({cmd:"extensionLoginVault"},e.id),bg.vault_logged_in_by_tab[e.id]=!0)})})}};chrome.runtime.onMessageExternal.addListener(function(e,s,a){[DATA_VAULT_URL_US,DATA_VAULT_URL_EU].some(function(e){return s.tab.url.includes("#")?s.tab.url.substring(0,s.tab.url.indexOf("#"))==e:s.tab.url==e})&&e&&a()}),VaultMessaging.logoutVault=function(e){Object.keys(bg.vault_comm_keys_by_tab).forEach(function(e){VaultMessaging.secureMessageForVault({cmd:"logout"},parseInt(e)),delete bg.vault_logged_in_by_tab[e]}),e&&e()},VaultMessaging.getVaultTabs=function(e){var s=[DATA_VAULT_URL_US,DATA_VAULT_URL_EU,DATA_VAULT_URL_US+"#",DATA_VAULT_URL_EU+"#"];chrome.tabs.query({url:s},function(s){e(s)})};