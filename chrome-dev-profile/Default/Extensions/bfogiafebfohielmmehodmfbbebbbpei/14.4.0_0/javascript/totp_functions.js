const ALGORITHMS={HMAC_SHA1:"SHA1",HMAC_SHA256:"SHA256",HMAC_SHA512:"SHA512"},OTP_ALGORITHMS={[ALGORITHMS.HMAC_SHA1]:{method:asmCrypto.HmacSha1,blockSize:20},[ALGORITHMS.HMAC_SHA256]:{method:asmCrypto.HmacSha256,blockSize:32},[ALGORITHMS.HMAC_SHA512]:{method:asmCrypto.HmacSha512,blockSize:64}};function generateTotpParams(e,t){const o=parseTotpUri(e);if(o||t){const{secret:e="",algorithm:t="SHA1",period:r=30,digits:n=6}=o;return{key:e,algorithm:t,period:r,digits:n}}}function parseTotpUri(e){const t=/otpauth:\/\/totp\/(?:(.+):)?(.*)\?(.*)/i.exec(e);if(t){const e=t[1],o=t[2],r=t[3],n=e?decodeURIComponent(e):null;return r.split("&").reduce((e,t)=>{const[o,r]=t.split("="),n=o.toLowerCase();return e[n]="issuer"===n?decodeURIComponent(r):"period"===n||"digits"===n?parseInt(r):r,e},{accountName:o,issuer:n})}}function generateTotpToken(e){const{key:t,algorithm:o,period:r,digits:n}=e;return t?generateToken(t,{algorithm:o,time:r,digits:n}):""}function generateToken(e,t){return totpGen(getSecretBytes(e),t)}function getSecretBytes(e){var t=e.replace(/\W+/g,"").toUpperCase();try{return new Uint8Array(base32.decode.asBytes(t))}catch(e){throw e}}function totpGen(e,t){var o=(t=t||{}).time||30,r=Date.now();return t.counter=Math.floor(r/1e3/o),hotpGen(e,t)}const DIGITS_POWER=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10],DEFAULT_DIGITS=6;function hotpGen(e,t){e=e||"";var o=(t=t||{}).counter||0,r=t.digits||DEFAULT_DIGITS,n=(t.algorithm?OTP_ALGORITHMS[t.algorithm.toUpperCase()]:"")||OTP_ALGORITHMS[ALGORITHMS.HMAC_SHA1],i=new Uint8Array(intToBytes(o)),a=new n.method(e).process(i).finish().result,s=15&a[n.blockSize-1],c=(127&a[s])<<24|(255&a[s+1])<<16|(255&a[s+2])<<8|255&a[s+3];for(c=c%(DIGITS_POWER[r]||Math.pow(10,r))+"";c.length<r;)c="0"+c;return c}function intToBytes(e){for(var t=[],o=7;o>=0;--o)t[o]=255&e,e>>=8;return t}